import { useRouter } from "expo-router";
import { getActivePublicRoom, createRoom } from "@/mocks/api/rooms";
import { getRandomAutoRoomTitle } from "@/utils/getRandomAutoRoomTitle";

export const useJoinNow = () => {
  const router = useRouter();

  const joinNow = async () => {
    try {
      const existingRoom = await getActivePublicRoom();

      if (existingRoom) {
        router.push({
          pathname: "/focus-room",
          params: { roomId: existingRoom.id },
        });
      } else {
        const newRoom = await createRoom({
          title: getRandomAutoRoomTitle(),
          isPublic: true,
          isAutoGenerated: true,
          countdownStart: Date.now(),
        });

        router.push({
          pathname: "/focus-room",
          params: {
            roomId: newRoom.id,
            isNew: "true",
          },
        });
      }
    } catch (error) {
      console.error("Join Now failed:", error);
    }
  };

  return { joinNow };
};
